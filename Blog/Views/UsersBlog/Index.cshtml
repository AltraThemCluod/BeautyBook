@using BeautyBook.Entities.Contract
@using BeautyBook.Entities.V1
@model BlogUsers
@{
    ViewBag.Title = "Manage Blog";
}
@Html.AntiForgeryToken()
<div class="page-content">
    <div class="container-fluid">

        <!-- start page title -->
        <div class="row">
            <div class="col-12">
                <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                    <h4 class="mb-sm-0 font-size-18">Manage Blog</h4>
                    <div class="page-title-right">
                        <ol class="breadcrumb m-0">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Dashboard</a></li>
                            <li class="breadcrumb-item active">Manage Blog</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>

        <div class="row clearfix">
            <div class="col-12">
                <div class="card">
                    <div class="card-header p-2 d-flex align-items-center justify-content-between">
                        <div>
                            <h4 class="card-title">Manage Blog</h4>
                            <p class="card-title-desc">
                                From this place you can manage blog
                            </p>
                        </div>
                        <a href="@Url.Action("Details","UsersBlog")" class="btn btn-primary waves-effect waves-light button w-md">Add New Blog</a>
                    </div>
                    <div class="card-body">
                        <div class="portlet-body table-responsive" id="divBlogTable">
                            <table class="table table-striped table-bordered table-hover" id="BlogTable"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- container-fluid -->
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            BlogDataTable.init();
        });

        var BlogDataTable = function () {
            let initTable1 = function () {
                let table = $('#BlogTable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    buttons: [],
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from _MAX_ total entries)",
                        "lengthMenu": "_MENU_ entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action("ManageBlogData", "UsersBlog")',
                        type: "post",
                        data: BuildSearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "Id", "data": "Id",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["Id"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "0.5%"
                        },
                        {
                            "title": "User Details", "data": "CreatedUserName",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-1"><b>User Name : </b>${row["CreatedUserName"] == "" || row["CreatedUserName"] == null ? '-' : row["CreatedUserName"]}</p>`;
                                htmlData += `<p class="mb-1"><b>Email : </b>${row["CreatedUserEmail"] == "" || row["CreatedUserEmail"] == null ? '-' : `<a href="mailto:${row["CreatedUserEmail"]}">${row["CreatedUserEmail"]}</a>`}</p>`;
                                htmlData += `<p class="mb-1"><b>Contact Number : </b>${row["CreatedUserContactNumber"] == "" || row["CreatedUserContactNumber"] == null ? '-' : `<a href="tel:${row["CreatedUserContactNumber"]}">${row["CreatedUserContactNumber"]}</a>`}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "2%"
                        },
                        {
                            "title": "Category", "data": "CategoryName",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `<p class="mb-1">${row["CategoryName"] == "" || row["CategoryName"] == null ? '-' : row["CategoryName"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "0%"
                        },
                        {
                            "title": "Blog Details", "data": "Title",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<div class="mb-2">${row["ThumbnailImageUrl"] == "" || row["ThumbnailImageUrl"] == null ? '-' : `<a class="text-decoration-underline" href="../${row["ThumbnailDataUrl"]}" target="_blank" >View Thumbnail Image</a>`}</div>`;
                                htmlData += `<h6 class="mb-2">${row["Title"] == "" || row["Title"] == null ? '-' : row["Title"]}</h6>`;
                                htmlData += `<p class="mb-0">${row["Description"] == "" || row["Description"] == null ? '-' : row["Description"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "4%"
                        },
                        {
                            "title": "Like / Share", "data": "Like",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-1"><b>Like : </b>${row["Like"]}</p>`;
                                htmlData += `<p class="mb-1"><b>Twitter Share : </b>${row["TwitterShare"]}</p>`;
                                htmlData += `<p class="mb-1"><b>Linkedin Share : </b>${row["linkedinShare"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Instagram Share : </b>${row["InstagramShare"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Email Share : </b>${row["EmailShare"]}</p>`;
                                htmlData += `<p class="mb-0"><b>WhatsApp Share : </b>${row["WhatsAppShare"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "4%"
                        },
                        {
                            "title": "Is Active ?", "data": "IsActive",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["IsActive"] == true) {
                                    //InactiveMessage
                                    htmlData = `<button onclick="InactiveMessage('${btoa(row["Id"])}');" class="badge bg-soft-success text-success">Active</button>`;
                                } else {
                                    htmlData = `<button onclick="ActiveMessage('${btoa(row["Id"])}');" class="badge bg-soft-danger text-danger">In-Active</button>`;
                                }
                                return htmlData;
                            }
                            , "orderable": false, "width": "1%"
                        },
                        {
                            "title": "Action", "data": "Id",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<a title="Edit" href="@Url.Action("Details", "UsersBlog")?ri=${btoa(row["Id"])}" class="cur-pointer-icon"><i class="bx bx-edit-alt"></i></a>`;
                                htmlData += `&nbsp;&nbsp;`;
                                htmlData += `<label title="Delete" class="cur-pointer-icon" onclick="ConfirmUsersdelete('${btoa(row["Id"])}');"><i class="bx bx-trash-alt"></i></label>`;
                                htmlData += `&nbsp;&nbsp;`;
                                htmlData += `<a title="View" href="@Url.Action("ViewDetails", "UsersBlog")?ri=${btoa(row["Id"])}" class="cur-pointer-icon"><i class="far fa-eye"></i></a>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "1%"
                        },
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#BlogTable")) {
                        $('#BlogTable').dataTable().fnDestroy();
                        $('#divBlogTable').html('<table class="table table-striped table-bordered table-hover" id="BlogTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        //Data fillter function
        function BuildSearchCriteria() {
            try {
                var param = {};
                return addRequestVerificationToken(param);
            } catch (e) { }
        }


        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }

        /////////Active and in-active users data ////////////////////////////

        //InactiveMessage confirmation function
        function InactiveMessage(Id) {
            if (confirm("Are you sure? you want to in-active this user")) {
                ActiveInActive(Id);
            }
        }

        //ActiveMessage confirmation function
        function ActiveMessage(Id) {
            if (confirm("Are you sure? you want to active this user")) {
                ActiveInActive(Id);
            }
        }

        //status ActiveInActive change function
        function ActiveInActive(rui) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("ActiveInActiveBlog", "UsersBlog")',
                data: { Id: rui},
                dataType: 'json',
                success: function (response) {
                    BlogDataTable.init();
                    if (response.Code == 200) {
                        $.notify(response.Message, "success");
                    } else {
                        $.notify(response.Message, "error");
                    }
                },
                error: function (error) {

                }
            });
        }

        ///////Blog data delete //////////////////////////////////
        //Delete confirmation function
        function ConfirmUsersdelete(Id) {
            if (confirm("Are you sure? you want to delete this blog")) {
                BlogDelete(Id);
            }
        }

        //Blog data delete function
        function BlogDelete(Id) {
            $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteBlog", "UsersBlog")",
                async: false,
                data: ({ Id: Id }),
                dataType: 'json',
                success: function (response) {
                    BlogDataTable.init();
                    if (response.Code == 200) {
                        $.notify(response.Message, "success");
                    } else {
                        $.notify(response.Message, "error");
                    }
                },
                error: function (response) {
                    $.notify("Opps! An error occured ! Please try again.", "error");
                }
            });
        }


    </script>
}