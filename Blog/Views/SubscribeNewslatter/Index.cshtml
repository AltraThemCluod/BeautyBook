@using BeautyBook.Entities.Contract
@using BeautyBook.Entities.V1
@model BlogCategory
@{
    ViewBag.Title = "Manage Subscribe Newslatter";
}
@Html.AntiForgeryToken()
<div class="page-content">
    <div class="container-fluid">

        <!-- start page title -->
        <div class="row">
            <div class="col-12">
                <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                    <h4 class="mb-sm-0 font-size-18">Manage Subscribe Newslatter</h4>
                    <div class="page-title-right">
                        <ol class="breadcrumb m-0">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Dashboard</a></li>
                            <li class="breadcrumb-item active">Manage Subscribe Newslatter</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>

        <div class="row clearfix">
            <div class="col-12">
                <div class="card">
                    <div class="card-header p-2">
                        <h4 class="card-title">Manage Subscribe Newslatter</h4>
                        <p class="card-title-desc">
                            Users subscribed email data
                        </p>
                    </div>
                    <div class="card-body">
                        <div class="portlet-body table-responsive" id="divSubscribeNewslatterTable">
                            <table class="table table-striped table-bordered table-hover" id="SubscribeNewslatterTable"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <!-- container-fluid -->
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            SubscribeNewslatterDataTable.init();
        });

        var SubscribeNewslatterDataTable = function () {
            let initTable1 = function () {
                let table = $('#SubscribeNewslatterTable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    buttons: [],
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from _MAX_ total entries)",
                        "lengthMenu": "_MENU_ entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action("ManageSubscribeNewslatterData", "SubscribeNewslatter")',
                        type: "post",
                        data: BuildSearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "Id", "data": "Id",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["Id"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "0.3%"
                        },
                        {
                            "title": "Blog Id", "data": "BlogId",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `<a target="_blank" title="View Blog" href="@Url.Action("ViewDetails", "UsersBlog")?ri=${btoa(row["BlogId"])}">${row["BlogId"]}</a>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "0.3%"
                        },
                        {
                            "title": "Email", "data": "Email",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["Email"] == "" || row["Email"] == null ? '-' : `<a href="mailto:${row["Email"]}">${row["Email"]}</a>`}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#SubscribeNewslatterTable")) {
                        $('#SubscribeNewslatterTable').dataTable().fnDestroy();
                        $('#divSubscribeNewslatterTable').html('<table class="table table-striped table-bordered table-hover" id="SubscribeNewslatterTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        //Data fillter function
        function BuildSearchCriteria() {
            try {
                var param = {};
                return addRequestVerificationToken(param);
            } catch (e) { }
        }


        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }
    </script>
}