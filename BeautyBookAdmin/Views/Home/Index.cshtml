@using BeautyBook.Common;
@using BeautyBookAdmin.Pages;
@using System.Web.Optimization;
@using BeautyBookAdmin.Infrastructure;

@Html.AntiForgeryToken()

@{
    ViewBag.Title = "Dashboard";
}

<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />

<style>
    .checkbox2 {
        width: 25px;
        height: 25px;
    }

    thead {
        background: #0069D9;
        color: white;
    }

    .row {
        margin: 0 !important;
    }

    .activ {
        background: linear-gradient(to right, #0069D9, #0069D9);
        color: white;
    }

    .has-error .checkbox, .has-error .checkbox-inline, .has-error .control-label, .has-error .form-control-feedback, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .has-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio label, .has-error.radio-inline label {
        color: #e73d4a
    }

    .has-error .form-control {
        border-color: #e73d4a;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075)
    }

        .has-error .form-control:focus {
            border-color: #d71b29;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f
        }

    .has-error .input-group-addon {
        color: #e73d4a;
        border-color: #e73d4a;
        background-color: #fbe1e3
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        z-index: 99;
        top: 40px;
        left: 0;
        right: 0;
        box-shadow: 0 39px 70px 0 rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

        .autocomplete-items > div {
            padding: 10px;
            cursor: pointer;
            border-bottom: 1px solid #ccc;
        }

            .autocomplete-items > div:hover {
                background: #fbfbfb;
            }

    .addDelete {
        color: black !important;
        background: #e9e9e9 !important;
    }

    .hideDelete {
        display: none !important;
    }

    .text-c-dark {
        color: #000;
    }

    .device-active .active .card {
        background: #157aec;
        cursor: pointer;
    }

    .device-active .active .text-c-dark {
        color: #fff !important;
    }

        .device-active .active .text-c-dark .icon {
            background-color: #0069D9;
            border: none;
        }

    .icon-box {
        background: #eff1f4;
    }

        .icon-box:hover {
            background: #0e67cc !important;
        }
</style>

<div class="modal fadeIn" id="SalonOwnerDataFillterModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h6 class="title" id="defaultModalLabel">Salon Filters</h6>
            </div>
            <div class="modal-body">
                <div class="row clearfix">
                    <div class="col-sm-12">
                        <label>Country</label>
                        <div class="form-group">
                            <select class="form-control" id="MasterCountry" onchange="ShowDataMasterState();" name="MasterCountry">
                                <option value="0">Select a country</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <label>State</label>
                        <div class="form-group">
                            <select class="form-control" id="MasterState" name="MasterState">
                                <option value="">Select a State</option>
                                
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSearch" type="button" class="btn btn-primary saveBtn" onclick="SearchReset(false);">Search</button>
                <button type="button" data-dismiss="modal" class="btn btn-secondary closeBtn">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fadeIn" id="viewBarandModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="title" id="defaultModalLabel"> <b id="SalonName"></b> Store Brand</h6>
            </div>
            <div class="modal-body">
                <div class="row" id="salonProductBrand">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn btn-secondary closeBtn">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="block-header">
    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <h2 id="headingtext"><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a>Dashboard</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/"><i class="icon-speedometer"></i></a>
                </li>
                <li class="breadcrumb-item active" id="breadcrum">Dashboard</li>
            </ul>
        </div>
    </div>
    <ul class="nav pt-4" id="myTab" role="tablist">
        <li class="nav-item col-lg-4 col-md-6 col-sm-6 text-center device-active" onclick="clickedBox();">
            <a class="active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">
                <div class="card chart-color1">
                    <div class="card-body p-lg-4 text-c-dark">
                        <div class="align-items-center d-flex">
                            <div class="top_counter">
                                <div class="icon-box icon"><i class="far fa-user"></i> </div>
                            </div>
                            <div class="text-left">
                                <b>New salon registered</b>
                                <h3 class="mb-0">@ViewBag.NumberOfSalonOwner</h3>
                            </div>
                        </div>
                        <p class="mb-0 mt-2 text-left">Since last month <i class="fa fa-arrow-right float-right"></i></p>
                    </div>
                </div>
            </a>
        </li>
        <li class="nav-item col-lg-4 col-md-6 col-sm-6 text-center device-active" onclick="clickedBox();">
            <a id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">
                <div class="card chart-color1">
                    <div class="card-body p-lg-4 text-c-dark">
                        <div class="align-items-center d-flex">
                            <div class="top_counter">
                                <div class="icon-box icon"><i class="fas fa-store"></i> </div>
                            </div>
                            <div class="text-left">
                                <b>New salon branch</b>
                                <h3 class="mb-0">@ViewBag.NumberOfSalon</h3>
                            </div>
                        </div>
                        <p class="mb-0 mt-2 text-left">Since last month <i class="fa fa-arrow-right float-right"></i></p>
                    </div>
                </div>
            </a>
        </li>
        <li class="nav-item col-lg-4 col-md-6 col-sm-6 text-center device-active" onclick="clickedBox();">
            <a id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">
                <div class="card chart-color1">
                    <div class="card-body p-lg-4 text-c-dark">
                        <div class="align-items-center d-flex">
                            <div class="top_counter">
                                <div class="icon-box icon"><i class="far fa-user"></i> </div>
                            </div>
                            <div class="text-left">
                                <b>New supplier register</b>
                                <h3 class="mb-0">@ViewBag.NumberOfSeller</h3>
                            </div>
                        </div>
                        <p class="mb-0 mt-2 text-left">Since last month <i class="fa fa-arrow-right float-right"></i></p>
                    </div>
                </div>
            </a>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
        <div class="card tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab" style="padding:15px;">
            <div class="body">
                <div class="portlet-body table-responsive" id="UserSalonOwnerDatatableDiv">
                    <table class="table table-striped table-bordered table-hover" id="UserSalonOwnerDatatable"></table>
                </div>
            </div>
        </div>
        <div class="tab-pane fade card" id="profile" role="tabpanel" aria-labelledby="profile-tab" style="padding:15px;">
            <div class="body">
                <div class="portlet-body table-responsive" id="UserSalonBranchDatatableDiv">
                    <table class="table table-striped table-bordered table-hover" id="UserSalonBranchDatatable"></table>
                </div>
            </div>
        </div>
        <div class="tab-pane fade card" id="contact" role="tabpanel" aria-labelledby="contact-tab" style="padding: 15px;">
            <div class="body">
                <div class="portlet-body table-responsive" id="UserSellerDatatableDiv">
                    <table class="table table-striped table-bordered table-hover" id="UserSellerDatatable"></table>
                </div>
            </div>
        </div>
    </div>

</div>


@section dashboardscripts{
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/datatable.js"></script>
    <script src="~/Scripts/datatables.min.js"></script>
    <script src="~/Scripts/datatables.bootstrap.js"></script>
}

@section Scripts {
    <script>
        function modalshow() {
            $('#UsersFilterPopup').modal('show');
        }
        function viewBrand(ProductBrand , SalonName) {
            debugger;
            var ProductBrandSplit = ProductBrand.split(',');

            $('#SalonName').text(SalonName)

            if (ProductBrandSplit.length == 0) {
                $('#salonProductBrand').append(`
                    <div class="col-lg-12 p-1">
                        <div class="card mb-2 card-border text-center">
                            <h5 class="mb-0">Record not found</h5>
                        </div>
                    </div>
                `);
            } else {
                $('#salonProductBrand').html('');
            }


            for (i = 0; i < ProductBrandSplit.length; i++) {
                $('#salonProductBrand').append(`
                    <div class="col-lg-3 p-1">
                        <div class="card mb-2 card-border text-center">
                            <h5 class="mb-0">${ProductBrandSplit[i]}</h5>
                        </div>
                    </div>
                `);
            }

            $('#viewBarandModal').modal('show');
        }

        $(document).ready(function () {
            ShowDataMasterCountry();

            UsersSalonOwnerDataTable.init();
            UsersSellerDataTable.init();
            SalonBranchDataTable.init();
        })

        function clickedBox() {
            $("#MasterCountry").val(0);
            $("#MasterState").val(0);
            UsersSalonOwnerDataTable.init();
            UsersSellerDataTable.init();
            SalonBranchDataTable.init();
        }


        var UsersSalonOwnerDataTable = function () {
            let initTable1 = function () {
                let table = $('#UserSalonOwnerDatatable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from _MAX_ total entries)",
                        "lengthMenu": "_MENU_ entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action(Actions.SalonOwnerDataGet, Controllers.Home)',
                        type: "post",
                        data: BuildSearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "Profile", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["ProfileUrl"] == "" || row["ProfileUrl"] == null) {
                                    htmlData = `<img onerror="DefaultImage(this);" class="rounded-circle round-img-table profile-size" src="${'@Configurations.ApiUrl' + row["ProfileUrl"]}">`;
                                } else {
                                    htmlData = `<a href="${'@Configurations.ApiUrl' + row["ProfileUrl"]}" target="_blank"><img onerror="DefaultImage(this);" class="rounded-circle round-img-table profile-size" src="${'@Configurations.ApiUrl' + row["ProfileUrl"]}"></a>`;
                                }
                                return htmlData;
                            }
                            , "orderable": false, "width": "0%"
                        },
                        {
                            "title": "Users Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0"><b>Username : </b>${row["FirstName"] == "" || row["FirstName"] == null ? '-' : row["FirstName"]} ${row["SecondName"] == "" || row["SecondName"] == null ? '-' : row["SecondName"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Email : </b>${row["Email"] == "" || row["Email"] == null ? '-' : `<a href="mailto:${row["Email"]}">${row["Email"]}</a>`}</p>`;
                                htmlData += `<p class="mb-0"><b>Gender : </b>${row["Gender"] == "" || row["Gender"] == null ? '-' : row["Gender"]}</p>`;
                                htmlData += `<p class="mb-0"><b>PrimaryPhone : </b>${row["PrimaryPhone"] == "" || row["PrimaryPhone"] == null ? '-' : `<a href="tel:${row["PrimaryPhone"]}">${row["PrimaryPhone"]}</a>` }</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Address Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0"><b>Address Line 1 : </b>${row["AddressLine1"] == "" || row["AddressLine1"] == null ? '-' : `<a target_blank href="https://www.google.com/maps/?q=${row["Latitude"]},${row["Longitude"]}">${row["AddrUrlssLine1"]}</a>`}</p>`;
                                htmlData += `<p class="mb-0"><b>Address Line 2 : </b>${row["AddressLine2"] == "" || row["AddressLine2"] == null ? '-' : row["AddressLine2"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Country : </b>${row["LookUpCountry"] == "" || row["LookUpCountry"] == null ? '-' : row["LookUpCountry"]}</p>`;
                                htmlData += `<p class="mb-0"><b>State : </b>${row["LookUpState"] == "" || row["LookUpState"] == null ? '-' : row["LookUpState"]}</p>`;
                                htmlData += `<p class="mb-0"><b>City : </b>${row["City"] == "" || row["City"] == null ? '-' : row["City"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Zipcode : </b>${row["ZipCode"] == "" || row["ZipCode"] == null ? '-' : row["ZipCode"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],
                // setup buttons extentension: http://datatables.net/extensions/buttons/
                    "buttons": [
                        {
                            text: 'Filters',
                            className: 'them-btn',
                            action: function (e, dt, node, config) {
                                ShowModalSalonOwnerDataFillter();
                            }
                        },
                        {
                            text: 'Reset',
                            className: 'them-reset-btn',
                            action: function () {
                                SearchReset(true)
                            }
                        }
                        //{ extend: 'excel', className: 'them-btn' }
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#UserSalonOwnerDatatable")) {
                        $('#UserSalonOwnerDatatable').dataTable().fnDestroy();
                        $('#UserSalonOwnerDatatableDiv').html('<table class="table table-striped table-bordered table-hover" width="100%" id="UserSalonOwnerDatatable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        //Data fillter function
        function BuildSearchCriteria() {
            try {
                var param = {};
                param["LookUpCountry"] = $("#MasterCountry").val();
                param["LookUpState"] = $("#MasterState").val();
                return addRequestVerificationToken(param);
            } catch (e) { }
        }


        //Seller details show
        var UsersSellerDataTable = function () {
            let initTable1 = function () {
                let table = $('#UserSellerDatatable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from _MAX_ total entries)",
                        "lengthMenu": "_MENU_ entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action(Actions.SellerDataGet, Controllers.Home)',
                        type: "post",
                        data: BuildSearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "Profile", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["ProfileUrl"] == "" || row["ProfileUrl"] == null) {
                                    htmlData = `<img onerror="DefaultImage(this);" class="rounded-circle round-img-table profile-size" src="${'@Configurations.ApiUrl' + row["ProfileUrl"]}">`;
                                } else {
                                    htmlData = `<a href="${'@Configurations.ApiUrl' + row["ProfileUrl"]}" target="_blank"><img onerror="DefaultImage(this);" class="rounded-circle round-img-table profile-size" src="${'@Configurations.ApiUrl' + row["ProfileUrl"]}"></a>`;
                                }
                                return htmlData;
                            }
                            , "orderable": false, "width": "0%"
                        },
                        {
                            "title": "Users Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0"><b>Username : </b>${row["FirstName"] == "" || row["FirstName"] == null ? '-' : row["FirstName"]} ${row["SecondName"] == "" || row["SecondName"] == null ? '-' : row["SecondName"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Email : </b>${row["Email"] == "" || row["Email"] == null ? '-' : `<a href="mailto:${row["Email"]}">${row["Email"]}</a>`}</p>`;
                                htmlData += `<p class="mb-0"><b>Gender : </b>${row["Gender"] == "" || row["Gender"] == null ? '-' : row["Gender"]}</p>`;
                                htmlData += `<p class="mb-0"><b>PrimaryPhone : </b>${row["PrimaryPhone"] == "" || row["PrimaryPhone"] == null ? '-' : `<a href="tel:${row["PrimaryPhone"]}">${row["PrimaryPhone"]}</a>` }</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Address Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0"><b>Address Line 1 : </b>${row["AddressLine1"] == "" || row["AddressLine1"] == null ? '-' : `<a target_blank href="https://www.google.com/maps/?q=${row["Latitude"]},${row["Longitude"]}">${row["AddressLine1"]}</a>`}</p>`;
                                htmlData += `<p class="mb-0"><b>Address Line 2 : </b>${row["AddressLine2"] == "" || row["AddressLine2"] == null ? '-' : row["AddressLine2"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Country : </b>${row["LookUpCountry"] == "" || row["LookUpCountry"] == null ? '-' : row["LookUpCountry"]}</p>`;
                                htmlData += `<p class="mb-0"><b>State : </b>${row["LookUpState"] == "" || row["LookUpState"] == null ? '-' : row["LookUpState"]}</p>`;
                                htmlData += `<p class="mb-0"><b>City : </b>${row["City"] == "" || row["City"] == null ? '-' : row["City"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Zipcode : </b>${row["ZipCode"] == "" || row["ZipCode"] == null ? '-' : row["ZipCode"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],
                // setup buttons extentension: http://datatables.net/extensions/buttons/
                    "buttons": [
                        {
                            text: 'Filters',
                            className: 'them-btn',
                            action: function (e, dt, node, config) {
                                ShowModalSalonOwnerDataFillter();
                            }
                        },
                        {
                            text: 'Reset',
                            className: 'them-reset-btn',
                            action: function () {
                                SearchReset(true)
                            }
                        }
                        //{ extend: 'excel', className: 'them-btn' }
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#UserSellerDatatable")) {
                        $('#UserSellerDatatable').dataTable().fnDestroy();
                        $('#UserSellerDatatableDiv').html('<table class="table table-striped table-bordered table-hover" width="100%" id="UserSellerDatatable"></table>');
                    }
                    initTable1();
                }
            };
        }();


        //Salon Branch details show
        var SalonBranchDataTable = function () {
            let initTable1 = function () {
                let table = $('#UserSalonBranchDatatable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from _MAX_ total entries)",
                        "lengthMenu": "_MENU_ entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action(Actions.SalonBranchDataGet, Controllers.Home)',
                        type: "post",
                        data: BuildSearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "Salons Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["LogoUrl"] == "" || row["LogoUrl"] == null) {
                                    htmlData = `<img onerror="DefaultLogo(this);" class="rounded-circle round-img-table profile-size" src="${'@Configurations.ApiUrl' + row["LogoUrl"]}" alt="salon-shop">`;
                                } else {
                                    htmlData = `<a href="${'@Configurations.ApiUrl' + row["LogoUrl"]}" target="_blank"><img onerror="DefaultLogo(this);" class="w-50" src="${'@Configurations.ApiUrl' + row["LogoUrl"]}" alt="salon-shop"></a>`;
                                }
                                htmlData += `<p class="mb-0 text-truncate" title="${row["SalonName"]}"><b>Salonname : </b>${row["SalonName"]}</p>`;
                                htmlData += `<p class="mb-0"><b>Primary Phone : </b> <a class="c-text-primary" href="tel:${row["PrimaryPhone"]}">${row["PrimaryPhone"]}</a></p>`;
                                htmlData += `<p class="mb-0"><b>Alternate Phone : </b><a class="c-text-primary" href="tel:${row["AlternatePhone"]}">${row["AlternatePhone"]}</a></p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Address Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0"><b>Country : </b>${row["LookUpCountry"] == "" || row["LookUpCountry"] == null ? '-' : row["LookUpCountry"]}</p>`;
                                htmlData += `<p class="mb-0"><b>State : </b>${row["LookUpState"] == "" || row["LookUpState"] == null ? '-' : row["LookUpState"]}</p>`;
                                htmlData += `<p class="mb-0"><b>City : </b>${row["City"] == "" || row["City"] == null ? '-' : row["City"]}</p>`;
                                htmlData += `<p class="mb-0"><b>ZipCode : </b>${row["ZipCode"] == "" || row["ZipCode"] == null ? '-' : row["ZipCode"]}</p>`;
                                htmlData += `<p class="mb-0 text-truncate" title="${row["AddressLine1"]}"><b>Address Line1 : </b>
                                    <a target="_balnk" class="c-text-primary" href="https://www.google.com/maps/?q=${row["Latitude"]},${row["Longitude"]}">${row["AddressLine1"] == "" || row["AddressLine1"] == null ? '-' : row["AddressLine1"]}</a>
                                </p>`;
                                htmlData += `<p class="mb-0 text-truncate " title="${row["AddressLine2"]}"><b>Address Line2 : </b>${row["AddressLine2"] == "" || row["AddressLine2"] == null ? '-' : row["AddressLine2"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Bank Details", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0"><b>Bank name : </b>${row["BankName"] == "" || row["BankName"] == null ? '-' : row["BankName"]}</p>`;
                                htmlData += `<p class="mb-0"><b>IBAN number: </b>${row["IBANNumber"] == "" || row["IBANNumber"] == null ? '-' : row["IBANNumber"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Created Date", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["CreatedDateStr"] == "" || row["CreatedDateStr"] == null ? '-' : row["CreatedDateStr"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Update Date", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `${row["UpdatedDateStr"] == "" || row["UpdatedDateStr"] == null ? '-' : row["UpdatedDateStr"]}`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Status", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                if (row["LookUpStatusId"] == 3) {
                                    htmlData = `<button class="badge badge-success">Approved</button>`;
                                } else if (row["LookUpStatusId"] == 4) {
                                    htmlData = `<button class="badge badge-danger">Rejected</button>`;
                                } else if (row["LookUpStatusId"] == 5) {
                                    htmlData = `<button class="badge badge-primary">Approval Pending</button>`;
                                }
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Action", "data": "",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<button class="badge badge-primary" onclick="viewBrand('${row["SalonProductBrand"]}','${row["SalonName"]}');" title="View Brand">Total <b>( ${row["NoOfBrand"]} )</b> Brand</button>`;
                                htmlData += `<button class="badge badge-primary" onclick="viewSales(${row["Id"]});" title="View Brand">Total <b>( ${row["NoOfSales"]} )</b> Sales</button>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],
                // setup buttons extentension: http://datatables.net/extensions/buttons/
                    "buttons": [
                        {
                            text: 'Filters',
                            className: 'them-btn',
                            action: function (e, dt, node, config) {
                                ShowModalSalonOwnerDataFillter();
                            }
                        },
                        {
                            text: 'Reset',
                            className: 'them-reset-btn',
                            action: function () {
                                SearchReset(true)
                            }
                        }
                        //{ extend: 'excel', className: 'them-btn' }
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#UserSalonBranchDatatable")) {
                        $('#UserSalonBranchDatatable').dataTable().fnDestroy();
                        $('#UserSalonBranchDatatableDiv').html('<table class="table table-striped table-bordered table-hover" width="100%" id="UserSalonBranchDatatable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        //Data fillter function
        function BuildSearchCriteria() {
            try {
                var param = {};
                param["LookUpCountry"] = $("#MasterCountry").val();
                param["LookUpState"] = $("#MasterState").val();
                return addRequestVerificationToken(param);
            } catch (e) { }
        }

        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }

        //Fillter modal open function
        const ShowModalSalonOwnerDataFillter = () => {
            $("#SalonOwnerDataFillterModal").modal("show");
        }

        //Fillter date reset function
        const SearchReset = (isReset = false) => {


            if (isReset == true) {
                $("#MasterCountry").val(0);
                $("#MasterState").val(0);
            }
            UsersSalonOwnerDataTable.init();
            UsersSellerDataTable.init();
            $("#SalonOwnerDataFillterModal").modal("hide");
        }


        //viewSales url
        function viewSales(SalonId) {
            window.location.href = `@Url.Action("Sales","Home")?SalonIdSales=${btoa(SalonId)}`
        }


        //Master Country Data Get
        function ShowDataMasterCountry() {
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.GetDataMasterCountry, Controllers.Home)',
                dataType: 'json',
                success: function (response) {
                    debugger;
                    for (i = 0; i < response.Values.length; i++) {
                        $('#MasterCountry').append(`
                            <option value="${response.Values[i].Id}">${response.Values[i].Name}</option>
                        `);
                    }
                },
                error: function (error) {
                }
            });
        }

        //Master State Data Get
        function ShowDataMasterState() {
            debugger;
            var CId = $('#MasterCountry').val();
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.GetDataMasterState, Controllers.Home)',
                data: { CountryId: CId },
                dataType: 'json',
                success: function (response) {
                    debugger;
                    for (i = 0; i < response.Values.length; i++) {
                        $('#MasterState').append(`
                            <option value="${response.Values[i].Id}">${response.Values[i].Name}</option>
                        `);
                    }
                },
                error: function (error) {
                }
            });
        }

    </script>
    <script src="~/assets/validation/js/jquery-ui.min.js"></script>
    <script src="~/assets/validation/js/app.min.js"></script>
    <script src="~/assets/validation/js/ui-modals.min.js"></script>
    <script src="~/assets/validation/js/jquery.validate.min.js"></script>
    <script src="~/assets/validation/js/additional-methods.min.js"></script>
    <script src="~/assets/validation/js/toastr.min.js"></script>
    <script src="~/assets/validation/js/ui-toastr.min.js"></script>
    <script src="~/assets/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/assets/vendor/sweetalert/sweetalert.min.js"></script> <!-- SweetAlert Plugin Js -->
    <script src="~/assets/js/pages/forms/dropify.js"></script>
    <script src="~/assets/js/pages/ui/dialogs.js"></script>
}