@using BeautyBook.Common;
@using BeautyBookAdmin.Pages;
@using System.Web.Optimization;
@using BeautyBookAdmin.Infrastructure;

@Html.AntiForgeryToken()

@{
    ViewBag.Title = "Manage Vendor";
}


<style>
    .checkbox2 {
        width: 25px;
        height: 25px;
    }

    thead {
        background: #0069D9;
        color: white;
    }

    .row {
        margin: 0 !important;
    }

    .activ {
        background: linear-gradient(to right, #0069D9, #0069D9);
        color: white;
    }

    .has-error .checkbox, .has-error .checkbox-inline, .has-error .control-label, .has-error .form-control-feedback, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .has-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio label, .has-error.radio-inline label {
        color: #e73d4a
    }

    .has-error .form-control {
        border-color: #e73d4a;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075)
    }

        .has-error .form-control:focus {
            border-color: #d71b29;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f
        }

    .has-error .input-group-addon {
        color: #e73d4a;
        border-color: #e73d4a;
        background-color: #fbe1e3
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        z-index: 99;
        top: 40px;
        left: 0;
        right: 0;
        box-shadow: 0 39px 70px 0 rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

        .autocomplete-items > div {
            padding: 10px;
            cursor: pointer;
            border-bottom: 1px solid #ccc;
        }

            .autocomplete-items > div:hover {
                background: #fbfbfb;
            }

    .addDelete {
        color: black !important;
        background: #e9e9e9 !important;
    }
    .salonBox {
        background: #fff;
        padding: 10px;
        border-radius: 10px;
        box-shadow: 0px 0px 11px 0px #00000047;
    }
    .hideDelete {
        display: none !important;
    }
    .product-card {
        border: 1px solid rgba(0,0,0,.125) !important;
        box-shadow: 0 1px 12px 0 rgb(0 0 0 / 10%) !important;
    }
</style>

<div class="block-header">
    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <h2 id="headingtext"><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a>Manage Vendor</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/"><i class="icon-home"></i></a>
                </li>
                <li class="breadcrumb-item active" id="breadcrum">Manage Vendor</li>
            </ul>
        </div>
    </div>
</div>

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="header row m-0 align-items-end">
                <div class="col-sm-3">
                    <label>Status</label>
                    <div class="form-group mb-0">
                        <select class="form-control" id="SearchStatus" name="SearchStatus">
                            <option value="2">Select Status</option>
                            <option value="1">Approved</option>
                            <option value="0">Un-Approved</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-3">
                    <button id="btnSearch" type="button" class="btn btn-primary saveBtn" onclick="SearchReset(false);">Search</button>
                    <button type="button" data-dismiss="modal" class="btn btn-secondary closeBtn" onclick="SearchReset(true);">Reset</button>
                </div>
            </div>
            <div class="body">
                <div class="portlet-body table-responsive" id="divOrderStatusTable">
                    <table class="table table-striped table-bordered table-hover" id="OrderStatusTable"></table>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fadeIn" id="SalonDetails" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h6 class="title m-0" id="defaultModalLabel">
                    Salon Details
                   
                </h6>
            </div>
            <div class="modal-body">
                <div id="SalonData" class="row">

                </div>
                <div id="SalonData_loader" style="display: none;" class="text-center mb-4">
                    <img src="~/assets/ajax-loader.gif" width='32px' height='32px' />
                </div>
            </div>
            <div class="modal-header">
                <h6 class="title m-0" id="defaultModalLabel">
                    <b><span class="text-dark" id="SalonName"></span></b> Salon purchase product list
                </h6>
            </div>
            <div class="modal-body">
                <div id="SalonProductData" class="row">

                </div>
                <div id="ProductData_loader" style="display: none;" class="text-center mb-4">
                    <img src="~/assets/ajax-loader.gif" width='32px' height='32px' />
                </div>
            </div>
        </div>
    </div>
</div>


            @section dashboardscripts{
                <script src="~/Scripts/jquery-ui.min.js"></script>
                <script src="~/Scripts/datatable.js"></script>
                <script src="~/Scripts/datatables.min.js"></script>
                <script src="~/Scripts/datatables.bootstrap.js"></script>
            }
<script>
    $(document).ready(() => {
        UsersDataTable.init();
    });

    //Fillter date reset function
    const SearchReset = (isReset = false) => {
        if (isReset == true) {
            $("#SearchStatus").val(2);
        }
        UsersDataTable.init();
    }

    var UsersDataTable = function () {
            let initTable1 = function () {
                let table = $('#OrderStatusTable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from _MAX_ total entries)",
                        "lengthMenu": "_MENU_ entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action(Actions.ManageVendorData, Controllers.ManageVendor)',
                        type: "post",
                        data: BuildSearchCriteria(),
                    },
                "columns": [
                    {
                        "title": "#", "data": "",
                        "render": function (data, type, row) {
                            let htmlData = "";
                            htmlData = `${row["Id"]}`;
                            return htmlData;
                        }
                        , "orderable": false, "width": "0%"
                    },
                    {
                        "title": "Profile", "data": "",
                        "render": function (data, type, row) {
                            let htmlData = "";
                            htmlData += `<p class="mb-0">Vendor name : <b>${row["Firstname"] == "" || row["Firstname"] == null ? '-' : row["Firstname"] + ' ' + row["SecondName"]}</b></p>`;
                            htmlData += `<p class="mb-0">Vendor contact : <b>${row["PrimaryPhone"] == "" || row["PrimaryPhone"] == null ? '-' : `<a href="tel:${row["PrimaryPhone"]}" >${row["PrimaryPhone"]}</a>`}</b></p>`;
                            htmlData += `<p class="mb-0">Vendor email : <b>${row["Email"] == "" || row["Email"] == null ? '-' : `<a href="mailto:${row["Email"]}" >${row["Email"]}</a>`}</b></p>`;
                            htmlData += `<p class="mb-0">Vendor location : <b>${row["AddressLine1"] == "" || row["AddressLine1"] == null ? '-' : `<a href="https://www.google.com/maps/?q=${row["Latitude"]},${row["Longitude"]}" >${row["AddressLine1"]}</a>` }</b></p>`;
                            return htmlData;
                        }
                        , "orderable": false, "width": "3%"
                    },
                    {
                        "title": "Selling summry", "data": "",
                        "render": function (data, type, row) {
                            let htmlData = "";
                            let salonBox = "";

                            var SalonIds = row["SalonIds"];
                            var salonNames = row["salonNames"];
                            if (SalonIds != "" && SalonIds != null) {

                                var SalonIdSplit = SalonIds.split(',');
                                var SalonNamesSplit = salonNames.split(',');



                                for (i = 0; i < SalonIdSplit.length; i++) {
                                    salonBox += `<a class="salonBox m-1" href="javascript:void(0)" onclick="ShowDataSalon('${btoa(SalonIdSplit[i])}','${btoa(row["UserId"])}')"><span>View Details</span> <p class="mb-0"><b>Salon</b> : ${SalonNamesSplit[i]}</p></a>`;
                                }

                            } else {
                                htmlData += `<div class="row">No salon found</div>`
                            }
                            htmlData += `<div class="row">${salonBox}</div>`;
                            return htmlData;
                        }
                        , "orderable": false, "width": "3%"
                    },
                    {
                        "title": "total transactions", "data": "",
                        "render": function (data, type, row) {
                            let htmlData = "";
                            htmlData += `<p class="mb-1">Total Sales : <b>SAR ${row["VendorTotalSales"].toFixed(2)}</b></p>`;
                            htmlData += `<p class="mb-0">Total num of goods Sales : <b>${row["NoOfSales"]}</b></p>`;

                            return htmlData;
                        }
                        , "orderable": false, "width": "3%"
                    },
                    {
                        "title": "Last transaction date", "data": "",
                        "render": function (data, type, row) {
                            let htmlData = "";
                            htmlData += `${row["LastTransactionDate"] == "" || row["LastTransactionDate"] == null ? '-' : row["LastTransactionDateStr"]}`;
                            return htmlData;
                        }
                        , "orderable": false, "width": "3%"
                    },
                    {
                        "title": "Is Approved ?", "data": "",
                        "render": function (data, type, row) {
                            let htmlData = "";
                            if (row["IsApproved"] == true) {
                                //InactiveMessage
                                htmlData = `<button onclick="UnApproveMessage('${btoa(row["Id"])}');" class="badge badge-primary">Approved</button>`;
                            } else {
                                htmlData = `<button onclick="ApproveMessage('${btoa(row["Id"])}');" class="badge badge-danger">Un-Approved</button>`;
                            }
                            return htmlData;
                        }
                        , "orderable": false, "width": "3%"
                    }
                ],
                // setup buttons extentension: http://datatables.net/extensions/buttons/
                    "buttons": [
                        //{ extend: 'excel', className: 'them-btn' }
                    ],

                    // setup responsive extension: http://datatables.net/extensions/responsive/
                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000] // change per page values here
                    ],
                    // set the initial value

                    "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                    // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                    // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                    // So when dropdowns used the scrollable div should be removed.
                    //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#OrderStatusTable")) {
                        $('#OrderStatusTable').dataTable().fnDestroy();
                        $('#divOrderStatusTable').html('<table class="table table-striped" width="100%" id="OrderStatusTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        //Data fillter function
        function BuildSearchCriteria() {
            try {
                var param = {};
                param["IsApprove"] = $('#SearchStatus').val();
                return addRequestVerificationToken(param);
            } catch (e) { }
        }

        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }

        //Get salon data
        function ShowDataSalon(SalonId , VendorId) {
            var apiUrl = "@System.Configuration.ConfigurationManager.AppSettings["ApiUrl"]";
            $('#SalonData').html(``);
            $('#SalonProductData').html(``);
            $('#SalonDetails').modal('show');

            $('#SalonData_loader').show();
            $('#ProductData_loader').show();

            debugger;
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.GetSalonData, Controllers.ManageVendor)',
                data: { SalonDataId: SalonId},
                dataType: 'json',
                success: function (response) {
                    debugger;
                    $('#SalonName').text(response.Item.SalonName == "" || response.Item.SalonName == null ? '-' : response.Item.SalonName);
                    $('#SalonData').append(`
                        <div class="col-lg-4 mt-2">
                            <div>
                                Salon Name
                            </div>
                            <label>
                                ${response.Item.SalonName == "" || response.Item.SalonName == null ? '-' : response.Item.SalonName}
                            </label>
                        </div>
                        <div class="col-lg-4 mt-2">
                            <div>
                                PrimaryPhone
                            </div>
                            <label>
                               ${response.Item.PrimaryPhone == "" || response.Item.PrimaryPhone == null ? '-' : `<a href="tel:${response.Item.PrimaryPhone}">${response.Item.PrimaryPhone}</a>`}
                            </label>
                        </div>
                        <div class="col-lg-4 mt-2">
                            <div>Alternate Phone</div>
                            <label>
                               ${response.Item.AlternatePhone == "" || response.Item.AlternatePhone == null ? '-' : `<a href="tel:${response.Item.AlternatePhone}">${response.Item.AlternatePhone}</a>`}
                            </label>
                        </div>
                        <div class="col-lg-4 mt-2">
                            <div>Address Line 1</div>
                            <label>
                               ${response.Item.AddressLine1 == "" || response.Item.AddressLine1 == null ? '-' : `<a target="_blank" href="https://www.google.com/maps/?q=${response.Item.Latitude},${response.Item.Longitude}}">${response.Item.AddressLine1}</a>`}
                            </label>
                        </div>
                        <div class="col-lg-4 mt-2">
                            <div>Address Line 2</div>
                            <label>
                               ${response.Item.AddressLine2 == "" || response.Item.AddressLine2 == null ? '-' : response.Item.AddressLine2}
                            </label>
                        </div>
                        <div class="col-lg-4 mt-2">
                            <div>Country , State , City (ZipCode)</div>
                            <label>
                               ${response.Item.Country == "" || response.Item.Country == null ? '-' : response.Item.Country} ,
                               ${response.Item.StateName == "" || response.Item.StateName == null ? '-' : response.Item.StateName} ,
                               ${response.Item.City == "" || response.Item.City == null ? '-' : response.Item.City} (${response.Item.ZipCode})
                            </label>
                        </div>
                        <div class="col-lg-4 mt-2">
                            <div>Bank Name</div>
                            <label>
                               ${response.Item.BankName == "" || response.Item.BankName == null ? '-' : response.Item.BankName}
                            </label>
                        </div>
                        <div class="col-lg-4 mt-2">
                            <div>IBANNumber</div>
                            <label>
                               ${response.Item.IBANNumber == "" || response.Item.IBANNumber == null ? '-' : response.Item.IBANNumber}
                            </label>
                        </div>
                    `)

                    

                     $.ajax({
                        type: "POST",
                        url: '@Url.Action(Actions.GetVendorProduct, Controllers.ManageVendor)',
                         data: { SalonDataId: SalonId, VendorId: VendorId },
                        dataType: 'json',
                         success: function (response) {
                             debugger;
                             console.log('vendorproduct',response);
                             if (response.Values.length > 0) {
                                 for (i = 0; i < response.Values.length; i++) {
                                    $('#SalonProductData').append(`
                                        <div class="col-lg-3 col-md-4 col-sm-6">
                                            <div class="card product-card">
                                                <div class="file">
                                                    <a class="file link-secondary" href="javascript:void(0);">
                                                        <div class="icon text-center">
                                                            <img class="w-100" src="${response.Values[i].ProductImage == "" || response.Values[i].ProductImage == null ? 'https://commercial.bunn.com/img/image-not-available.png' : apiUrl + response.Values[i].ProductImage}" style="border-radius: 10px;height: 200px;object-fit: contain;"/>
                                                        </div>

                                                        <div class="file-name border-top pt-2 m-2">
                                                            <b class="mb-0 text-muted">${response.Values[i].ProductName}</b>
                                                            <small class="d-flex justify-content-between" style="font-size:89%;"><span>Invoice No: <b> #${response.Values[i].InvoiceNo} </b></span> <span class="">Qty : <b>${response.Values[i].Qty}</b></span></small>
                                                            <small class="d-block" style="font-size:89%;">Total amount: <b>SAR ${response.Values[i].ProductTotal}</b></small>
                                                            <small class="d-block" style="font-size:89%;">Purchasing Date: <br/> <b>${response.Values[i].PurchasingDateStr}</b></small>
                                                        </div>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    `);
                                 }
                                 $('#ProductData_loader').hide();
                            } else {
                                $('#SalonProductData').append(`
                                    <div class="col-lg-12 col-md-12 col-sm-12">
                                        <div class="card product-card text-center p-3">
                                            <b>Product not found</b>
                                        </div>
                                    </div>
                                `);
                                 $('#ProductData_loader').hide();
                            }
                        },
                        error: function (error) {
                            alert(error);
                        }
                    });

                    console.log('Salon data response', response)
                    $('#SalonData_loader').hide();
                },
                error: function (error) {
                    $('#SalonData_loader').hide();
                    alert(error);
                }
            });
        }



    //InactiveMessage swal function
    function UnApproveMessage(Id) {
        swal({
            title: "Are you sure ?",
            text: "You will be un-approved the vendor !",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#dc3545",
            confirmButtonText: "Yes, do it !",
            closeOnConfirm: false
        }, function () {
            ApprovedUnApproved(Id, "UnApproved");
        });
    }

    //ActiveMessage swal function
    function ApproveMessage(Id) {
        swal({
            title: "Are you sure ?",
            text: "You will be approved the vendor !",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#dc3545",
            confirmButtonText: "Yes, do it !",
            closeOnConfirm: false
        }, function () {
            ApprovedUnApproved(Id, "Approved");
        });
    }

     //status ActiveInActive change function
        function ApprovedUnApproved(rui, type) {
             
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.ApprovedUnApprovedVendor, Controllers.ManageVendor)',
                data: { ri: rui},
                dataType: 'json',
                success: function (response) {
                     
                    UsersDataTable.init();
                    if (type == "UnApproved") {
                        swal("Un Approved !", response.Message , "success");
                    } else if (type == "Approved") {
                        swal("Approved !", response.Message , "success");
                    }
                },
                error: function (error) {
                    if (type == "UnApproved") {
                        swal("Error !", "An error occured while un-approved the vendor.", "error");
                    } else if (type == "Approved") {
                        swal("Error !", "An error occured while approved the vendor.", "error");
                    }

                }
            });
        }


</script>

<script src="~/assets/validation/js/jquery-ui.min.js"></script>
<script src="~/assets/validation/js/app.min.js"></script>
<script src="~/assets/validation/js/ui-modals.min.js"></script>
<script src="~/assets/validation/js/jquery.validate.min.js"></script>
<script src="~/assets/validation/js/additional-methods.min.js"></script>
<script src="~/assets/validation/js/toastr.min.js"></script>
<script src="~/assets/validation/js/ui-toastr.min.js"></script>
<script src="~/assets/vendor/dropify/js/dropify.min.js"></script>
<script src="~/assets/vendor/sweetalert/sweetalert.min.js"></script> <!-- SweetAlert Plugin Js -->
<script src="~/assets/js/pages/forms/dropify.js"></script>
<script src="~/assets/js/pages/ui/dialogs.js"></script>
